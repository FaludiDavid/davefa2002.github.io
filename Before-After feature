<body>
<canvas id="canvas"></canvas>
<script>
  const canvas = document.getElementById('canvas');
  const ctx = canvas.getContext('2d');
  const rusty = new Image();
  const clean = new Image();
  rusty.src = 'images/rusty.jpg';
  clean.src = 'images/clean.jpg';
  let imageWidth = 0;
  let imageHeight = 0;
  const maskCanvas = document.createElement('canvas');
  const maskCtx = maskCanvas.getContext('2d');
  const brushSize = 50;
  let isDrawing = false;
  function updateCanvas() {
    // 1. Rajzoljuk a rozsdás felnit teljesen
    ctx.drawImage(rusty, 0, 0, imageWidth, imageHeight);
    // 2. Állítsuk be a maszkolást: csak azokat a részeket mutassuk a "clean" képből,
    // ahol a maszk feketére van rajzolva
    ctx.save();
    ctx.globalCompositeOperation = 'destination-out';
    ctx.drawImage(maskCanvas, 0, 0);
    ctx.restore();
    // 3. Tiszta felni rajzolása csak a maszkolt részekre
    ctx.save();
    ctx.globalCompositeOperation = 'destination-over';
    ctx.drawImage(clean, 0, 0, imageWidth, imageHeight);
    ctx.restore();
  }
  function startDrawing() {
    isDrawing = true;
  }
  function stopDrawing() {
    isDrawing = false;
  }
  function draw(e) {
    if (!isDrawing) return;
    const rect = canvas.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    maskCtx.beginPath();
    maskCtx.arc(x, y, brushSize, 0, 2 * Math.PI);
    maskCtx.fillStyle = 'black';
    maskCtx.fill();
    updateCanvas();
  }
  function init() {
    // Kép betöltése után méret beállítása és canvas rajzolás
    imageWidth = rusty.width;
    imageHeight = rusty.height;
    canvas.width = imageWidth;
    canvas.height = imageHeight;
    maskCanvas.width = imageWidth;
    maskCanvas.height = imageHeight;
    // Kezdeti renderelés
    updateCanvas();
  }
  rusty.onload = () => {
    // csak akkor induljunk el, ha mindkét kép be van töltve
    if (clean.complete) init();
  };
  clean.onload = () => {
    if (rusty.complete) init();
  };
  canvas.addEventListener('mousedown', startDrawing);
  canvas.addEventListener('mouseup', stopDrawing);
  canvas.addEventListener('mouseleave', stopDrawing);
  canvas.addEventListener('mousemove', draw);
</script>
</body>
</html>


